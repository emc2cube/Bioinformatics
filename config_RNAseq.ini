##############################################################
##                       Description                        ##
##############################################################
#
# Edit this file to create custom configurations to use with
# sh_RNAseq.sh. Any change to this file will override default
# script settings.
#
##############################################################
##                  Configurable variables                  ##
##############################################################
#
#
## General options
#
# Maximum number of threads (or CPUs) to request and allocate to programs.
# In some case less than this value may automatically be allowed.
threads=$(nproc --all --ignore=1)
#
# Maximum amount of memory (in GB) to request and allocate to programs.
# In some case less than this value may automatically be allowed.
mem="128"
#
# Log folder, will be created in your destination folder.
logs="logs"
#
# Advanced: Path to temporary folder. Useful if your cluster system have a fast local I/O disk.
# Leave empty to use the destination folder. In all cases temporary files will be purged at the end of the script.
tmp="\${L_SCRATCH_JOB}"
#
# Debug mode.
# For troubleshooting only. Will keep all intermediate files,
# sbatch files and logs.
# 0 = No ; 1 = Yes
debug="0"
#
#
## SLURM options
#
# email to use to receive SLURM notifications.
# By default only send FAIL notifications for all jobs and FAIL,END for the last one.
SLURMemail=""
#
# SLURM account, partition and qos settings if required.
SLURMaccount=""
SLURMpartition=""
SLURMqos=""
#
# Custom commands to run before any other program.
# Use it to load modules for example:
# customcmd="module load R"
customcmd=""
#
#
## FastQ options
#
# If sample files are split into multiple FastQ files, merge them.
# 0 = No ; 1 = Yes
merge="0"
#
# Process undetermined/unmatched files (tag not properly recognized).
# 0 = No ; 1 = Yes
underdet="0"
#
# Process BLANK files (Sample name should be "BLANK").
# 0 = No ; 1 = Yes
blank="0"
#
# Perform fastqc on fastq files.
# If sequences are trimmed, fastqc will be performed on trimmed sequences.
# 0 = No ; 1 = Yes
fastqc="0"
#
# Trim sequences with Trimmomatic.
# 0 = No ; 1 = Yes
trim="0"
#
# Trimmomatic folder, should contain a trimmomatic.jar file
Trimmomatic="/Tools/Trimmomatic"
#
# Keep unpaired trimmed sequences.
# 0 = No ; 1 = Yes
unpaired="0"
#
#
## Alignment options
#
# Select which software to use for alignment jobs.
# This should be installed in your $PATH and corresponding indexes need to be created.
# Valid values: star, hisat2, tophat2
align="star"
#
# tophat2 (bowtie2) indexed reference genome location.
th_refgenome="/Tools/RefGenomes/Homo_sapiens/UCSC/hg19/Sequence/Bowtie2Index/genome"
#
# hisat2 indexed reference genome location.
ha_refgenome="/Tools/RefGenomes/Homo_sapiens/UCSC/hg19/Sequence/Hisat2Index/genome"
#
# STAR indexed reference genome location.
st_refgenome="/Tools/RefGenomes/Homo_sapiens/UCSC/hg19/Sequence/StarIndex/"
#
# RSEM indexed reference genome location.
rs_refgenome="/Tools/RefGenomes/Homo_sapiens/UCSC/hg19/Sequence/RsemIndex/genome"
#
# Annotation files folder.
# It must be compatible with the indexed reference genome used for alignment.
# This folder may contain your gtf / gff3 files.
# If tophat2 is used it should contains the known.gff, known.fa, etcâ€¦, files
# else they will be generated during the first run.
annotations="/Tools/RefGenomes/Homo_sapiens/UCSC/hg19/Annotation/Genes"
#
# GTF formated annotation file.
# By default looks for genes.gtf located in the ${annotation} folder.
gtf="${annotations}/genes.gtf"
#
# Reference genome (fasta) file.
# It must be compatible with your indexed genomes, and annotation files.
fasta_refgenome="/Tools/RefGenomes/Homo_sapiens/UCSC/hg19/Sequence/WholeGenomeFasta/genome.fa"
#
# Read group parameters.
# Library: if empty LB will be set to the destination folder name.
LB=""
#
# Platform used to produce the reads.
# Valid values: CAPILLARY, LS454, ILLUMINA, SOLID, HELICOS, IONTORRENT and PACBIO.
PL="ILLUMINA"
#
#
## Differential Expression options
#
# Select which software to use for differential expression jobs. Leave empty if not needed.
# Corresponding software or modules should be installed in your $PATH
# Valid values: deseq2, cufflinks, both
diffexp="deseq2"
#
# Delimit replicate samples by a COMMA and groups by a SPACE. Sample name is case sensitive.
# example:
# groupedsamples="1d-Control-Rep1,1d-Control-Rep2,1d-Control-Rep3 5d-Control-Rep1,5d-Control-Rep2,5d-Control-Rep3 1d-Experiment-Rep1,1d-Experiment-Rep2,1d-Experiment-Rep3 5d-Experiment-Rep1,5d-Experiment-Rep2,5d-Experiment-Rep3"
groupedsamples=""
#
# Delimit group labels by a COMMA. Groups should be named in the same order than the samples.
# example:
# labels="1d-Control,5d-Control,1d-Experiment,5d-Experiment"
labels=""
#
#
## Local Splicing Variation options
#
# Select which software to use for LSV jobs. Leave empty if not needed.
# Corresponding software or modules should be installed in your $PATH
# or location configured properly below.
# Valid values: majiq, leafcutter, both
splicing="majiq"
#
# MAJIQ options
#
# Length of the RNA-seq reads. Not needed since MAJIQ 2.2, uncomment in the code if using an older MAJIQ version.
# MAJIQ can handle experiments with multiple read lengths, just indicate the longest read length.
# Leave empty for it to be automatically detected, can be overwritten here if needed.
# example:
# readlength="250"
#readlength=""
#
# Preparation strandness.
# Some of the RNASeq preparations are strand specific.
# This preparations can be reverse strand specific [reverse],
# forward strand specific [forward], or non-strand specific [none].
# This parameter is optional, in which case [none] is used as default.
# Valid values: forward, reverse, none
strandness="none"
#
# Transcriptome file with the annotation database to be used with MAJIQ.
# It must be compatible with the indexed reference genome used for alignment.
# Currently, only accepts GFF3 format. By default looks for genes.gff3 located in the ${annotation} folder.
gff3="${annotations}/genes.gff3"
#
# Genome assembly.
# Name of the genome assembly used. Can also be determined automatically from your directory structure (see examples).
# examples:
# genomebuild="hg19"
# genomebuild=$(echo ${gff3} | sed 's/\/Annotation.*//g' | awk -F/ '{print $NF}')
genomebuild=$(echo ${gff3} | sed 's/\/Annotation.*//g' | awk -F/ '{print $NF}')
#
# Perform PSI quantification.
# 0 = No ; 1 = Yes
psi="0"
#
# LeafCutter options
#
# LeafCutter folder, should contain the scripts, clustering and leafviz folders.
leafCutterDir="/Tools/leafcutter"
#
# Optional exon_file location.
# For more details see http://davidaknowles.github.io/leafcutter/articles/Usage.html
exonfile="${annotations}/leafcutter_exons.txt.gz"
#
# Annotation code for Leafcutter Shiny App.
# path to annotation files and <annotation_code> used in step 0 of
# http://davidaknowles.github.io/leafcutter/articles/Visualization.html
# From Step 1 concrete example section this would be:
# anncode="../leafviz/annotation_codes/gencode_hg19/gencode_hg19"
anncode="${annotations}/leafcutter"
#
#
## Notifications options
#
# Event name used in your webhooks or IFTTT recipes.
# The IFTTT maker channel will look for the combination private key + event name to then trigger your recipe.
# You can then create a recipe to send an email, a text message or a push notification.
# In the case of a Slack webhook this will be used in the message title
notifevent="RNAseq"
#
# Trigger a Slack Webhook when script is done.
# You must create an "Incoming WebHooks" associated to your slack workspace on https://slack.com/apps
# Copy your full private webhook URL here. Leave blank to disable this function.
# slackwebhookURL="https://hooks.slack.com/services/T5HF5GTUK85/AHUIK456HJG/GSD27f5gGQ7SD5r2fg" # Not a real webhook URL, you have to use your own private one.
slackwebhookURL=""
#
# Trigger IFTTT when script is done.
# You must register the "Maker channel" on https://ifttt.com/maker and create an event (limit of 3 free event since September 2020...)
# Copy your private key here. Leave blank to disable this function.
# iftttkey="AbCd_15CdhUIvbsFJTHGMcfgjsdHRTgcyjt" # Not a real key, you have to use your own private one.
iftttkey=""
#
#
##############################################################
##  Setup done. Go home there is nothing below this point!  ##
##############################################################
